from telegram import Update, InlineKeyboardButton, InlineKeyboardMarkup, ReplyKeyboardMarkup, KeyboardButton
from telegram.ext import ContextTypes
from telegram.error import TelegramError
from config.settings import NEWS_CHANNEL_ID, ADMIN_IDS
from database.users import save_user, load_users
from utils.logger import logger

async def check_subscription(update: Update, context: ContextTypes.DEFAULT_TYPE) -> bool:
    try:
        user_id = update.effective_user.id
        member = await context.bot.get_chat_member(chat_id=NEWS_CHANNEL_ID, user_id=user_id)
        status = member.status
        logger.info(f"–°—Ç–∞—Ç—É—Å –ø–æ–¥–ø–∏—Å–∫–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user_id}: {status}")
        return status in ['member', 'administrator', 'creator']
    except TelegramError as e:
        logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ –ø–æ–¥–ø–∏—Å–∫–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user_id}: {e}")
        return False

async def get_sub_keyboard():
    channel_name = NEWS_CHANNEL_ID.replace('@', '')
    keyboard = [
        [InlineKeyboardButton("üîî –ü–æ–¥–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ –∫–∞–Ω–∞–ª", url=f"https://t.me/{channel_name}")],
        [InlineKeyboardButton("‚úÖ –Ø –ø–æ–¥–ø–∏—Å–∞–ª—Å—è", callback_data="check_subscription")]
    ]
    return InlineKeyboardMarkup(keyboard)

def get_main_keyboard():
    keyboard = [
        [KeyboardButton("üé¨ –§–∏–ª—å–º—ã"), KeyboardButton("üìñ –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è")],
        [KeyboardButton("‚ùì –ü–æ–º–æ—â—å"), KeyboardButton("üë®‚Äçüíª –ü–æ–¥–¥–µ—Ä–∂–∫–∞")]
    ]
    return ReplyKeyboardMarkup(keyboard, resize_keyboard=True)

async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    user_id = str(update.effective_user.id)
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –≤ –∫–æ–º–∞–Ω–¥–µ start (–Ω–∞–ø—Ä–∏–º–µ—Ä, ID —Ñ–∏–ª—å–º–∞)
    args = context.args
    if args and args[0].isdigit():
        # –ï—Å–ª–∏ –µ—Å—Ç—å ID —Ñ–∏–ª—å–º–∞, —Å—Ä–∞–∑—É –ø—ã—Ç–∞–µ–º—Å—è –µ–≥–æ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å
        film_id = int(args[0])
        try:
            await update.message.reply_text("üîÑ –ó–∞–≥—Ä—É–∂–∞—é —Ñ–∏–ª—å–º, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–¥–æ–∂–¥–∏—Ç–µ...")
            # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –æ–ø–∏—Å–∞–Ω–∏–µ –∏ —Ñ–∏–ª—å–º
            await context.bot.copy_message(
                chat_id=update.effective_chat.id,
                from_chat_id=CHANNEL_ID,
                message_id=film_id - 1
            )
            await context.bot.copy_message(
                chat_id=update.effective_chat.id,
                from_chat_id=CHANNEL_ID,
                message_id=film_id
            )
            welcome_after_film = (
                "‚úÖ –ü—Ä–∏—è—Ç–Ω–æ–≥–æ –ø—Ä–æ—Å–º–æ—Ç—Ä–∞!\n\n"
                "üí´ –•–æ—Ç–∏—Ç–µ –±–æ–ª—å—à–µ —Ñ–∏–ª—å–º–æ–≤?\n"
                f"‚Ä¢ –ü–µ—Ä–µ—Ö–æ–¥–∏—Ç–µ –≤ –Ω–∞—à –∫–∞–Ω–∞–ª: {NEWS_CHANNEL_ID}\n"
                "‚Ä¢ –í—ã–±–∏—Ä–∞–π—Ç–µ –ª—é–±–æ–π —Ñ–∏–ª—å–º\n"
                "‚Ä¢ –û—Ç–ø—Ä–∞–≤–ª—è–π—Ç–µ –µ–≥–æ ID –±–æ—Ç—É\n\n"
                "üéØ –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–Ω–æ–ø–∫–∏ –Ω–∏–∂–µ –¥–ª—è –Ω–∞–≤–∏–≥–∞—Ü–∏–∏:"
            )
            await update.message.reply_text(welcome_after_film, reply_markup=get_main_keyboard())
            return
        except Exception as e:
            logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Ñ–∏–ª—å–º–∞: {e}")
            error_text = (
                "‚ùå –§–∏–ª—å–º —Å —Ç–∞–∫–∏–º ID –Ω–µ –Ω–∞–π–¥–µ–Ω.\n\n"
                "üé¨ –ö–∞–∫ –ø–æ–ª—É—á–∏—Ç—å —Ñ–∏–ª—å–º –ø—Ä–∞–≤–∏–ª—å–Ω–æ:\n"
                "1Ô∏è‚É£ –ü–µ—Ä–µ–π–¥–∏—Ç–µ –≤ –Ω–∞—à –∫–∞–Ω–∞–ª —Ñ–∏–ª—å–º–æ–≤\n"
                f"‚îî {NEWS_CHANNEL_ID}\n"
                "2Ô∏è‚É£ –í—ã–±–µ—Ä–∏—Ç–µ –ª—é–±–æ–π —Ñ–∏–ª—å–º\n"
                "3Ô∏è‚É£ –°–∫–æ–ø–∏—Ä—É–π—Ç–µ –µ–≥–æ ID (–Ω–∞–ø—Ä–∏–º–µ—Ä: 123)\n"
                "4Ô∏è‚É£ –û—Ç–ø—Ä–∞–≤—å—Ç–µ ID –±–æ—Ç—É\n\n"
                "üéØ –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–Ω–æ–ø–∫–∏ –Ω–∏–∂–µ –¥–ª—è –Ω–∞–≤–∏–≥–∞—Ü–∏–∏"
            )
            await update.message.reply_text(error_text, reply_markup=get_main_keyboard())
            return

    # –°—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–æ–µ –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ –¥–ª—è –Ω–æ–≤—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
    if not await check_subscription(update, context):
        first_text = (
            "üé¨ –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –º–∏—Ä –∫–∏–Ω–æ!\n\n"
            "üí´ –ß—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å –¥–æ—Å—Ç—É–ø –∫ —Ñ–∏–ª—å–º–∞–º:\n"
            "1Ô∏è‚É£ –ü–æ–¥–ø–∏—à–∏—Ç–µ—Å—å –Ω–∞ –∫–∞–Ω–∞–ª\n"
            "2Ô∏è‚É£ –ù–∞–∂–º–∏—Ç–µ ¬´‚úÖ –Ø –ø–æ–¥–ø–∏—Å–∞–ª—Å—è¬ª\n"
            "3Ô∏è‚É£ –û—Ç–ø—Ä–∞–≤—å—Ç–µ ID –Ω—É–∂–Ω–æ–≥–æ —Ñ–∏–ª—å–º–∞\n\n"
            "üéÅ –í –∫–∞–Ω–∞–ª–µ –≤—ã –Ω–∞–π–¥–µ—Ç–µ:\n"
            "‚Ä¢ –ü—Ä–µ–º—å–µ—Ä—ã —Ñ–∏–ª—å–º–æ–≤\n"
            "‚Ä¢ –¢–æ–ø–æ–≤—ã–µ —Ñ–∏–ª—å–º—ã\n"
            "‚Ä¢ –ü–æ–¥–±–æ—Ä–∫–∏ –ª—É—á—à–∏—Ö —Ñ–∏–ª—å–º–æ–≤"
        )
        await update.message.reply_text(first_text, reply_markup=await get_sub_keyboard())
        return

    welcome_text = (
        "üé¨ –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –ú–∏—Ä –ö–∏–Ω–æ!\n\n"
        "üìù –ö–∞–∫ —Å–º–æ—Ç—Ä–µ—Ç—å —Ñ–∏–ª—å–º—ã:\n"
        "1Ô∏è‚É£ –ù–∞–π–¥–∏—Ç–µ ID —Ñ–∏–ª—å–º–∞ –≤ –∫–∞–Ω–∞–ª–µ\n"
        f"‚îî {NEWS_CHANNEL_ID}\n"
        "2Ô∏è‚É£ –û—Ç–ø—Ä–∞–≤—å—Ç–µ ID –±–æ—Ç—É\n"
        "‚îî –ù–∞–ø—Ä–∏–º–µ—Ä: 123\n\n"
        "üéØ –ò–ª–∏ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–Ω–æ–ø–∫–∏:\n"
        "üé¨ –§–∏–ª—å–º—ã - –ü–µ—Ä–µ–π—Ç–∏ –≤ –∫–∞–Ω–∞–ª\n"
        "üìñ –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è - –ü–æ–¥—Ä–æ–±–Ω–∞—è –ø–æ–º–æ—â—å\n"
        "‚ùì –ü–æ–º–æ—â—å - –û—Ç–≤–µ—Ç—ã –Ω–∞ –≤–æ–ø—Ä–æ—Å—ã\n"
        "üë®‚Äçüíª –ü–æ–¥–¥–µ—Ä–∂–∫–∞ - –°–≤—è–∑—å —Å –∞–¥–º–∏–Ω–∞–º–∏"
    )
    await update.message.reply_text(welcome_text, reply_markup=get_main_keyboard())