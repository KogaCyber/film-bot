from telegram import Update, InlineKeyboardButton, InlineKeyboardMarkup
from telegram.ext import ContextTypes
from config.settings import NEWS_CHANNEL_ID, ADMIN_IDS
from handlers.user import check_subscription, get_sub_keyboard
from utils.logger import logger

async def subscription_callback(update: Update, context: ContextTypes.DEFAULT_TYPE):
    query = update.callback_query
    await query.answer()
    
    if await check_subscription(update, context):
        welcome_text = (
            "üëã –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –Ω–∞—à –∫–∏–Ω–æ–±–æ—Ç!\n\n"
            "üé¨ –ó–¥–µ—Å—å –≤—ã –º–æ–∂–µ—Ç–µ –ø–æ–ª—É—á–∏—Ç—å –¥–æ—Å—Ç—É–ø –∫ —Ñ–∏–ª—å–º–∞–º –∏–∑ –Ω–∞—à–µ–π –∫–æ–ª–ª–µ–∫—Ü–∏–∏.\n"
            "üìù –ü—Ä–æ—Å—Ç–æ –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –º–Ω–µ ID —Ñ–∏–ª—å–º–∞, –∏ —è –ø—Ä–∏—à–ª—é –≤–∞–º —Ñ–∏–ª—å–º –≤–º–µ—Å—Ç–µ —Å –æ–ø–∏—Å–∞–Ω–∏–µ–º.\n\n"
            f"üîç ID —Ñ–∏–ª—å–º–∞ –º–æ–∂–Ω–æ –Ω–∞–π—Ç–∏ –≤ –Ω–∞—à–µ–º –∫–∞–Ω–∞–ª–µ {NEWS_CHANNEL_ID}"
        )
        await query.message.edit_text(welcome_text)
    else:
        await query.message.reply_text(
            "üîî –î–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –±–æ—Ç–∞ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –ø–æ–¥–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ –Ω–∞—à –∫–∞–Ω–∞–ª –Ω–æ–≤–æ—Å—Ç–µ–π!",
            reply_markup=await get_sub_keyboard()
        )

async def support_callback(update: Update, context: ContextTypes.DEFAULT_TYPE):
    query = update.callback_query
    await query.answer()
    
    user_id = str(update.effective_user.id)
    admin_usernames = []
    
    for admin_id in ADMIN_IDS:
        try:
            admin = await context.bot.get_chat(admin_id)
            if admin.username:
                admin_usernames.append(f"@{admin.username}")
        except Exception as e:
            logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ–± –∞–¥–º–∏–Ω–µ {admin_id}: {e}")
    
    support_text = (
        "üëã –ü—Ä–∏–≤–µ—Ç! –ú—ã –≤—Å–µ–≥–¥–∞ –Ω–∞ —Å–≤—è–∑–∏!\n\n"
        "‚ú® –ù–∞—à–∞ –ø–æ–¥–¥–µ—Ä–∂–∫–∞ –ø–æ–º–æ–∂–µ—Ç:\n"
        "‚Ä¢ –ù–∞–π—Ç–∏ –Ω—É–∂–Ω—ã–π —Ñ–∏–ª—å–º\n"
        "‚Ä¢ –†–µ—à–∏—Ç—å —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–∏–µ –ø—Ä–æ–±–ª–µ–º—ã\n"
        "‚Ä¢ –û—Ç–≤–µ—Ç–∏—Ç—å –Ω–∞ –≤–∞—à–∏ –≤–æ–ø—Ä–æ—Å—ã\n\n"
        "üìù –ö–∞–∫ –Ω–∞–ø–∏—Å–∞—Ç—å –≤ –ø–æ–¥–¥–µ—Ä–∂–∫—É:\n"
        "1. –í—ã–±–µ—Ä–∏—Ç–µ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞\n"
        "2. –û–ø–∏—à–∏—Ç–µ –≤–∞—à—É —Å–∏—Ç—É–∞—Ü–∏—é\n"
        "3. –ü–æ–ª—É—á–∏—Ç–µ –±—ã—Å—Ç—Ä—ã–π –æ—Ç–≤–µ—Ç\n\n"
        f"üë®‚Äçüíª –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—ã –æ–Ω–ª–∞–π–Ω:\n{', '.join(admin_usernames)}\n\n"
        "‚ö°Ô∏è –°—Ä–µ–¥–Ω–µ–µ –≤—Ä–µ–º—è –æ—Ç–≤–µ—Ç–∞: 5-10 –º–∏–Ω—É—Ç\n"
        "üéØ –†–∞–±–æ—Ç–∞–µ–º 24/7"
    )
    
    keyboard = [
        [InlineKeyboardButton("üîô –í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –º–µ–Ω—é", callback_data="back_to_help")]
    ]
    
    await query.message.edit_text(
        support_text,
        reply_markup=InlineKeyboardMarkup(keyboard)
    )
    logger.info(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {user_id} –∑–∞–ø—Ä–æ—Å–∏–ª –ø–æ–¥–¥–µ—Ä–∂–∫—É —á–µ—Ä–µ–∑ –∫–Ω–æ–ø–∫—É")


async def help_callback(update: Update, context: ContextTypes.DEFAULT_TYPE):
    query = update.callback_query
    await query.answer()
    
    help_text = (
        "üé¨ –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –º–∏—Ä –∫–∏–Ω–æ!\n\n"
        "üî• –ß—Ç–æ —É–º–µ–µ—Ç –Ω–∞—à –±–æ—Ç:\n"
        "‚Ä¢ –ú–≥–Ω–æ–≤–µ–Ω–Ω—ã–π –¥–æ—Å—Ç—É–ø –∫ —Ñ–∏–ª—å–º–∞–º\n"
        "‚Ä¢ –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è –æ—Ç–ø—Ä–∞–≤–∫–∞ –æ–ø–∏—Å–∞–Ω–∏–π\n"
        "‚Ä¢ –ë—ã—Å—Ç—Ä—ã–π –ø–æ–∏—Å–∫ –ø–æ ID\n\n"
        "üí´ –ü–æ–ø—É–ª—è—Ä–Ω—ã–µ –≤–æ–ø—Ä–æ—Å—ã:\n"
        "‚ùì –ù–µ –ø—Ä–∏—Ö–æ–¥–∏—Ç —Ñ–∏–ª—å–º?\n"
        "   ‚îî –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø—Ä–∞–≤–∏–ª—å–Ω–æ—Å—Ç—å ID\n"
        "‚ùì –ì–¥–µ –Ω–∞–π—Ç–∏ –Ω–æ–≤—ã–µ —Ñ–∏–ª—å–º—ã?\n"
        "   ‚îî –ù–∞–∂–º–∏—Ç–µ ¬´üé¨ –§–∏–ª—å–º—ã¬ª\n"
        "‚ùì –ö–∞–∫ –ø–æ–ª—É—á–∏—Ç—å —Ñ–∏–ª—å–º?\n"
        "   ‚îî –ù–∞–∂–º–∏—Ç–µ ¬´üìñ –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è¬ª"
    )
    
    keyboard = [
        [InlineKeyboardButton("üë®‚Äçüíª –ù–∞–ø–∏—Å–∞—Ç—å –≤ –ø–æ–¥–¥–µ—Ä–∂–∫—É", callback_data="support")]
    ]
    
    await query.message.edit_text(
        help_text,
        reply_markup=InlineKeyboardMarkup(keyboard)
    )